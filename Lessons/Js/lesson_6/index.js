// ## üî§ –§—É–Ω–∫—Ü–∏–∏
//! - –û–±—ä—è–≤–ª–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–π (function declaration/expression)

// declaration

// greet();

// function greet() {
// 	console.log("Hello bro");
// }

// greet();

// expression

//! error greet();

// const greet = function() {
// 	console.log("Heelo bro");
// }

// const user = {
// 	name: "Alex",
// 	drive: () => {
// 		console.log(this.name);
// 	}
// }

// user.drive();

//* ok greet();

//! - –°—Ç—Ä–µ–ª–æ—á–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏

// (() => {
// 	console.log("object");
// })()

// const summ = (a, b) => {
// 	console.log(a + b);
// }

// summ(5, 10);

// const hello = (a, b) => {
// 	console.log(arguments);
// }

// hello(5, 10, 55, 67, 66, 55);

// const Person = (name, surname, age) => {
// 	this.name = name;
// 	this.age = age;
// 	this.surname = surname;
// }

// let p1 = new Person("Alex", "Faridov", 45);
// console.log(p1.name);

//! - –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –∏ –∞—Ä–≥—É–º–µ–Ω—Ç—ã

function greet(a, b) {

}

greet(5, 10)
// - –í–æ–∑–≤—Ä–∞—Ç –∑–Ω–∞—á–µ–Ω–∏–π
// - –ó–∞–º—ã–∫–∞–Ω–∏—è
// - –†–µ–∫—É—Ä—Å–∏—è
// - IIFE (Immediately Invoked Function Expressions)